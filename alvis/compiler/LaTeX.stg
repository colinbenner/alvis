<!
Copyright (c) 2011 Colin Benner
Permission is hereby granted, free of charge, to any person obtaining a copy of                                                                                                                                                            
this software and associated documentation files (the "Software"), to deal in the                                                                                                                                                          
Software without restriction, including without limitation the rights to use,                                                                                                                                                              
copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the                                                                                                                                                            
Software, and to permit persons to whom the Software is furnished to do so,                                                                                                                                                                
subject to the following conditions:                                                                                                                                                                                                       
The above copyright notice and this permission notice shall be included in all                                                                                                                                                             
copies or substantial portions of the Software.                                                                                                                                                                                            
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,                                                                                                                                                        
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A                                                                                                                                                              
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT                                                                                                                                                         
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION                                                                                                                                                          
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE                                                                                                                                                             
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                                                                                                                                                                                     
!>
group T;
program(functions) ::= <<
\documentclass{scrartcl}
\usepackage{fancyvrb}
\usepackage{color}
\begin{document}


\definecolor{const}{RGB}{255,85,255}
\definecolor{blue}{RGB}{65,85,255}
\definecolor{green}{RGB}{85,255,65}
\newcommand{\ident}[1]{#1}
\newcommand{\type}[1]{\textcolor{blue}{#1}}
\newcommand{\keyword}[1]{\emph{#1}}
\newcommand{\binop}[1]{$#1$}
\newcommand{\unop}[1]{$#1$}
\newcommand{\literal}[1]{\textcolor{const}{#1}}

\begin{Verbatim}[commandchars=\\\{\}]
<functions; separator="
">
\end{Verbatim}

\end{document}
>>

mainFunction(params, code) ::= <<
\keyword{main}(<params; separator=", ">) <code>
>>
function(name, params, code) ::= <<
<name>(<params; separator=", ">) <code>
>>

type(name) ::= "<name>"
array(base) ::= "<base>$[]$"
ident(name) ::= "<name>"

block(statements) ::= <<{
    <statements; separator="
">
}
>>

param(type, ident) ::= "<type> <ident>"
decl(type, ident) ::= "<type> <ident>,"
declInit(type, ident, rhs) ::= "<type> <ident> \binop{=} <rhs>,"
assign(lhs, rhs) ::= "<lhs> \binop{=} <rhs>,"
attributeAssign(obj, lhs, rhs) ::= "<obj>.<lhs> \binop{=} <rhs>"
return(expr) ::= "\keyword{return} <expr>,"

if(cond, then) ::= <<\keyword{if} <cond>\keyword{:}
    <then>
>>
ifElse(cond, then, else) ::= <<
\keyword{if} <cond>\keyword{:}
    <then>
\keyword{else}
    <else>
>>
for(lhs, rhs, body) ::= <<\keyword{for} <lhs> \keyword{in} <rhs>\keyword{:}
    <body>
>>
while(cond, body) ::= <<\keyword{while} <cond>\keyword{:}
    <body>
>>

breakpoint(pseudoArgument) ::= ";"

add(left, right) ::= "<left> \binop{+} <right>"
sub(left, right) ::= "<left> \binop{-} <right>"
mul(left, right) ::= "<left> \binop{*} <right>"
div(left, right) ::= "<left> \binop{/} <right>"
mod(left, right) ::= "<left> \binop{%} <right>"
and(left, right) ::= "<left> \binop{&&} <right>"
or(left, right) ::= "<left> \binop{||} <right>"
equal(left, right) ::= "<left> \binop{==} <right>"
notEqual(left, right) ::= "<left> \binop{!=} <right>"
lessThan(left, right) ::= "<left> \binop{\<} <right>"
greaterThan(left, right) ::= "<left> \binop{\>} <right>"
lessOrEqual(left, right) ::= "<left> \binop{\<=} <right>"
greaterOrEqual(left, right) ::= "<left> \binop{\>=} <right>"

not(arg) ::= "\binop{!}<arg>"
paren(arg) ::= "(<arg>)"
plus(arg) ::= "\unop{+}<arg>"
minus(arg) ::= "\unop{-}<arg>"

literal(text) ::= "\literal{<text>}"

call(function, args) ::= "<function>(<args; separator=\", \">)"

dot(left, right) ::= "<left>.<right>"

index(array, index) ::= "<array>$[$<index>$]$"

semicolon(stat) ::= "<stat>,"
breakBlock(stat) ::= "<stat>;"
