grammar org.xtext.example.mydsl1.MyDsl with org.eclipse.xtext.common.Terminals

generate myDsl "de.unisiegen.informatik.bs.alvis.language.algorithmLanguage"


Model:
	{Model}(functions+=functionDefinition* main=mainFunction);
//functionDefinition*
//program    : functionDefinition*;

functionDefinition : name=ID '(' (formalParams=formalParams)? ')' (':' returnType=type)? blocks+=block ;

mainFunction   :'main('  formalParams=formalParams? ')' blocks+=block ;

formalParams  : params+=param (',' params+=param)*;

param   : type name=ID;//((type=[declaration])|'String'|'Integer'|'Boolean') name=ID;
 
block  : {block}'begin' statements+=statement* 'end' ;

type: {type}((type=[declaration])|'String'|'Integer'|'Boolean');


statement : 
	declaration endExpr
    | expr endExpr
    | assignment endExpr
    | 'return' expr? endExpr
    | 'if' expr ':' statement ('else' statements+=statement)?
    | 'for' param 'in' expr ':' statements+=statement
    | 'while' expr ':' statement
    | block
    |types=[functionDefinition] name=ID
    |types = [statement] name=ID
    |'mains'  name=ID;
   
//thissone : {thissone} [thisone];
   
//    ;

declaration
    : name=ID '=' expr;

assignment
    : postfixExpr '=' expr
    ;

expr
    : andExpr ('||' andExpr)*
    ;

andExpr
    : eqExpr ('&&' eqExpr)*
    ;

eqExpr
    : relExpr (('=='|'!=') relExpr)*
    ;

relExpr
    : addExpr (('<'|'>'|'<=' |'>=') addExpr)*
    ;

addExpr
    : mulExpr (('+' | '-') mulExpr)*
    ;

mulExpr
    : atom (('*' | '/' | '%' ) atom)*
    ;

atom: '!' atom
//    | '(' sign expr ')'
	| '(' ('+'|'-') expr ')'
    | '(' expr ')'
    | postfixExpr
    | constant
    ;

postfixExpr
    : 'PRINT' '(' expr ')'
    | ID
      ( '.' ID 
      | '(' (expr (',' expr)*)? ')' 
      | '[' expr ']'   
      )*
    ;


//String geht im moment nicht richtig
terminal constant
//    : 'BOOL'
	: 'true'|'false'
//    | 'FLOAT'
	| '0'..'9'+'.'('0'..'9')*
//    | INT
	| ('0'..'9')+
    | 'STRING'
//    | '"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\') | ~('\\'|'"') )* '"' 
//    | ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');
//    | 'NULL'
	| 'null'
//    | 'INFTY'
	| 'infty'
    ;
    
terminal endExpr
	: (',' | ';') ;


//terminal sign: '+' | '-' ;
 
terminal ID  : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ; 
