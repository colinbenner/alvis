/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.example.mydsl1.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl1.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl1.services.MyDslGrammarAccess;

}

@parser::members {
 
 	private MyDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefunctionDefinition
entryRulefunctionDefinition 
:
{ before(grammarAccess.getFunctionDefinitionRule()); }
	 rulefunctionDefinition
{ after(grammarAccess.getFunctionDefinitionRule()); } 
	 EOF 
;

// Rule functionDefinition
rulefunctionDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
(rule__FunctionDefinition__Group__0)
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemainFunction
entryRulemainFunction 
:
{ before(grammarAccess.getMainFunctionRule()); }
	 rulemainFunction
{ after(grammarAccess.getMainFunctionRule()); } 
	 EOF 
;

// Rule mainFunction
rulemainFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMainFunctionAccess().getGroup()); }
(rule__MainFunction__Group__0)
{ after(grammarAccess.getMainFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleformalParams
entryRuleformalParams 
:
{ before(grammarAccess.getFormalParamsRule()); }
	 ruleformalParams
{ after(grammarAccess.getFormalParamsRule()); } 
	 EOF 
;

// Rule formalParams
ruleformalParams
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormalParamsAccess().getGroup()); }
(rule__FormalParams__Group__0)
{ after(grammarAccess.getFormalParamsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleparam
entryRuleparam 
:
{ before(grammarAccess.getParamRule()); }
	 ruleparam
{ after(grammarAccess.getParamRule()); } 
	 EOF 
;

// Rule param
ruleparam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamAccess().getGroup()); }
(rule__Param__Group__0)
{ after(grammarAccess.getParamAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleblock
entryRuleblock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleblock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule block
ruleblock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletype
entryRuletype 
:
{ before(grammarAccess.getTypeRule()); }
	 ruletype
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule type
ruletype
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getTypesAssignment()); }
(rule__Type__TypesAssignment)
{ after(grammarAccess.getTypeAccess().getTypesAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatement
entryRulestatement 
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledeclaration
entryRuledeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruledeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule declaration
ruledeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getGroup()); }
(rule__Declaration__Group__0)
{ after(grammarAccess.getDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleassignment
entryRuleassignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleassignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule assignment
ruleassignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpr
entryRuleexpr 
:
{ before(grammarAccess.getExprRule()); }
	 ruleexpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule expr
ruleexpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAccess().getGroup()); }
(rule__Expr__Group__0)
{ after(grammarAccess.getExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleandExpr
entryRuleandExpr 
:
{ before(grammarAccess.getAndExprRule()); }
	 ruleandExpr
{ after(grammarAccess.getAndExprRule()); } 
	 EOF 
;

// Rule andExpr
ruleandExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExprAccess().getGroup()); }
(rule__AndExpr__Group__0)
{ after(grammarAccess.getAndExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleeqExpr
entryRuleeqExpr 
:
{ before(grammarAccess.getEqExprRule()); }
	 ruleeqExpr
{ after(grammarAccess.getEqExprRule()); } 
	 EOF 
;

// Rule eqExpr
ruleeqExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqExprAccess().getGroup()); }
(rule__EqExpr__Group__0)
{ after(grammarAccess.getEqExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerelExpr
entryRulerelExpr 
:
{ before(grammarAccess.getRelExprRule()); }
	 rulerelExpr
{ after(grammarAccess.getRelExprRule()); } 
	 EOF 
;

// Rule relExpr
rulerelExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelExprAccess().getGroup()); }
(rule__RelExpr__Group__0)
{ after(grammarAccess.getRelExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleaddExpr
entryRuleaddExpr 
:
{ before(grammarAccess.getAddExprRule()); }
	 ruleaddExpr
{ after(grammarAccess.getAddExprRule()); } 
	 EOF 
;

// Rule addExpr
ruleaddExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddExprAccess().getGroup()); }
(rule__AddExpr__Group__0)
{ after(grammarAccess.getAddExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemulExpr
entryRulemulExpr 
:
{ before(grammarAccess.getMulExprRule()); }
	 rulemulExpr
{ after(grammarAccess.getMulExprRule()); } 
	 EOF 
;

// Rule mulExpr
rulemulExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMulExprAccess().getGroup()); }
(rule__MulExpr__Group__0)
{ after(grammarAccess.getMulExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleatom
entryRuleatom 
:
{ before(grammarAccess.getAtomRule()); }
	 ruleatom
{ after(grammarAccess.getAtomRule()); } 
	 EOF 
;

// Rule atom
ruleatom
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomAccess().getAlternatives()); }
(rule__Atom__Alternatives)
{ after(grammarAccess.getAtomAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepostfixExpr
entryRulepostfixExpr 
:
{ before(grammarAccess.getPostfixExprRule()); }
	 rulepostfixExpr
{ after(grammarAccess.getPostfixExprRule()); } 
	 EOF 
;

// Rule postfixExpr
rulepostfixExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostfixExprAccess().getGroup()); }
(rule__PostfixExpr__Group__0)
{ after(grammarAccess.getPostfixExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconstant
entryRuleconstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleconstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule constant
ruleconstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getAlternatives()); }
(rule__Constant__Alternatives)
{ after(grammarAccess.getConstantAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFLOAT
entryRuleFLOAT 
:
{ before(grammarAccess.getFLOATRule()); }
	 ruleFLOAT
{ after(grammarAccess.getFLOATRule()); } 
	 EOF 
;

// Rule FLOAT
ruleFLOAT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFLOATAccess().getGroup()); }
(rule__FLOAT__Group__0)
{ after(grammarAccess.getFLOATAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleendExpr
entryRuleendExpr 
:
{ before(grammarAccess.getEndExprRule()); }
	 ruleendExpr
{ after(grammarAccess.getEndExprRule()); } 
	 EOF 
;

// Rule endExpr
ruleendExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEndExprAccess().getAlternatives()); }
(rule__EndExpr__Alternatives)
{ after(grammarAccess.getEndExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Type__TypesAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypesStringKeyword_0_0()); }

	'String' 

{ after(grammarAccess.getTypeAccess().getTypesStringKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTypesIntegerKeyword_0_1()); }

	'Integer' 

{ after(grammarAccess.getTypeAccess().getTypesIntegerKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTypesBooleanKeyword_0_2()); }

	'Boolean' 

{ after(grammarAccess.getTypeAccess().getTypesBooleanKeyword_0_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTypesGraphKeyword_0_3()); }

	'Graph' 

{ after(grammarAccess.getTypeAccess().getTypesGraphKeyword_0_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTypesVertexKeyword_0_4()); }

	'Vertex' 

{ after(grammarAccess.getTypeAccess().getTypesVertexKeyword_0_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTypesEdgeKeyword_0_5()); }

	'Edge' 

{ after(grammarAccess.getTypeAccess().getTypesEdgeKeyword_0_5()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTypesQueueKeyword_0_6()); }

	'Queue' 

{ after(grammarAccess.getTypeAccess().getTypesQueueKeyword_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_0()); }
(rule__Statement__Group_0__0)
{ after(grammarAccess.getStatementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_1()); }
(rule__Statement__Group_1__0)
{ after(grammarAccess.getStatementAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_2()); }
(rule__Statement__Group_2__0)
{ after(grammarAccess.getStatementAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_3()); }
(rule__Statement__Group_3__0)
{ after(grammarAccess.getStatementAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_4()); }
(rule__Statement__Group_4__0)
{ after(grammarAccess.getStatementAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_5()); }
(rule__Statement__Group_5__0)
{ after(grammarAccess.getStatementAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_6()); }
(rule__Statement__Group_6__0)
{ after(grammarAccess.getStatementAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getBlockParserRuleCall_7()); }
	ruleblock
{ after(grammarAccess.getStatementAccess().getBlockParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqExpr__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqExprAccess().getEqualsSignEqualsSignKeyword_1_0_0()); }

	'==' 

{ after(grammarAccess.getEqExprAccess().getEqualsSignEqualsSignKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getEqExprAccess().getExclamationMarkEqualsSignKeyword_1_0_1()); }

	'!=' 

{ after(grammarAccess.getEqExprAccess().getExclamationMarkEqualsSignKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelExprAccess().getLessThanSignKeyword_1_0_0()); }

	'<' 

{ after(grammarAccess.getRelExprAccess().getLessThanSignKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getRelExprAccess().getGreaterThanSignKeyword_1_0_1()); }

	'>' 

{ after(grammarAccess.getRelExprAccess().getGreaterThanSignKeyword_1_0_1()); }
)

    |(
{ before(grammarAccess.getRelExprAccess().getLessThanSignEqualsSignKeyword_1_0_2()); }

	'<=' 

{ after(grammarAccess.getRelExprAccess().getLessThanSignEqualsSignKeyword_1_0_2()); }
)

    |(
{ before(grammarAccess.getRelExprAccess().getGreaterThanSignEqualsSignKeyword_1_0_3()); }

	'>=' 

{ after(grammarAccess.getRelExprAccess().getGreaterThanSignEqualsSignKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExprAccess().getAsteriskKeyword_1_0_0()); }

	'*' 

{ after(grammarAccess.getMulExprAccess().getAsteriskKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getMulExprAccess().getSolidusKeyword_1_0_1()); }

	'/' 

{ after(grammarAccess.getMulExprAccess().getSolidusKeyword_1_0_1()); }
)

    |(
{ before(grammarAccess.getMulExprAccess().getPercentSignKeyword_1_0_2()); }

	'%' 

{ after(grammarAccess.getMulExprAccess().getPercentSignKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getGroup_0()); }
(rule__Atom__Group_0__0)
{ after(grammarAccess.getAtomAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAtomAccess().getGroup_1()); }
(rule__Atom__Group_1__0)
{ after(grammarAccess.getAtomAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getAtomAccess().getGroup_2()); }
(rule__Atom__Group_2__0)
{ after(grammarAccess.getAtomAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getAtomAccess().getPostfixExprParserRuleCall_3()); }
	rulepostfixExpr
{ after(grammarAccess.getAtomAccess().getPostfixExprParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAtomAccess().getGroup_4()); }
(rule__Atom__Group_4__0)
{ after(grammarAccess.getAtomAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getExistingVariableAssignment_0_0()); }
(rule__PostfixExpr__ExistingVariableAssignment_0_0)
{ after(grammarAccess.getPostfixExprAccess().getExistingVariableAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getPostfixExprAccess().getExistingVariableAssignment_0_1()); }
(rule__PostfixExpr__ExistingVariableAssignment_0_1)
{ after(grammarAccess.getPostfixExprAccess().getExistingVariableAssignment_0_1()); }
)

    |(
{ before(grammarAccess.getPostfixExprAccess().getExistingVariableAssignment_0_2()); }
(rule__PostfixExpr__ExistingVariableAssignment_0_2)
{ after(grammarAccess.getPostfixExprAccess().getExistingVariableAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getGroup_1_0()); }
(rule__PostfixExpr__Group_1_0__0)
{ after(grammarAccess.getPostfixExprAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getPostfixExprAccess().getGroup_1_1()); }
(rule__PostfixExpr__Group_1_1__0)
{ after(grammarAccess.getPostfixExprAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getPostfixExprAccess().getGroup_1_2()); }
(rule__PostfixExpr__Group_1_2__0)
{ after(grammarAccess.getPostfixExprAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getGroup_0()); }
(rule__Constant__Group_0__0)
{ after(grammarAccess.getConstantAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getGroup_1()); }
(rule__Constant__Group_1__0)
{ after(grammarAccess.getConstantAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getFloatAssignment_2()); }
(rule__Constant__FloatAssignment_2)
{ after(grammarAccess.getConstantAccess().getFloatAssignment_2()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getIntegerAssignment_3()); }
(rule__Constant__IntegerAssignment_3)
{ after(grammarAccess.getConstantAccess().getIntegerAssignment_3()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getStringAssignment_4()); }
(rule__Constant__StringAssignment_4)
{ after(grammarAccess.getConstantAccess().getStringAssignment_4()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getNullAssignment_5()); }
(rule__Constant__NullAssignment_5)
{ after(grammarAccess.getConstantAccess().getNullAssignment_5()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getInfinityAssignment_6()); }
(rule__Constant__InfinityAssignment_6)
{ after(grammarAccess.getConstantAccess().getInfinityAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EndExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndExprAccess().getCommaKeyword_0()); }

	',' 

{ after(grammarAccess.getEndExprAccess().getCommaKeyword_0()); }
)

    |(
{ before(grammarAccess.getEndExprAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getEndExprAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getFunctionsAssignment_0()); }
(rule__Model__FunctionsAssignment_0)*
{ after(grammarAccess.getModelAccess().getFunctionsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMainAssignment_1()); }
(rule__Model__MainAssignment_1)
{ after(grammarAccess.getModelAccess().getMainAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__0__Impl
	rule__FunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_0()); }
(rule__FunctionDefinition__NameAssignment_0)
{ after(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__1__Impl
	rule__FunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__2__Impl
	rule__FunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getFormalParamsAssignment_2()); }
(rule__FunctionDefinition__FormalParamsAssignment_2)?
{ after(grammarAccess.getFunctionDefinitionAccess().getFormalParamsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__3__Impl
	rule__FunctionDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__4__Impl
	rule__FunctionDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup_4()); }
(rule__FunctionDefinition__Group_4__0)?
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getBlocksAssignment_5()); }
(rule__FunctionDefinition__BlocksAssignment_5)
{ after(grammarAccess.getFunctionDefinitionAccess().getBlocksAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FunctionDefinition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_4__0__Impl
	rule__FunctionDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getColonKeyword_4_0()); }

	':' 

{ after(grammarAccess.getFunctionDefinitionAccess().getColonKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getReturnTypeAssignment_4_1()); }
(rule__FunctionDefinition__ReturnTypeAssignment_4_1)
{ after(grammarAccess.getFunctionDefinitionAccess().getReturnTypeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MainFunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunction__Group__0__Impl
	rule__MainFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getMainAssignment_0()); }
(rule__MainFunction__MainAssignment_0)
{ after(grammarAccess.getMainFunctionAccess().getMainAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunction__Group__1__Impl
	rule__MainFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getMainFunctionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunction__Group__2__Impl
	rule__MainFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getFormalParamsAssignment_2()); }
(rule__MainFunction__FormalParamsAssignment_2)?
{ after(grammarAccess.getMainFunctionAccess().getFormalParamsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunction__Group__3__Impl
	rule__MainFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getMainFunctionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MainFunction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MainFunction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getBlocksAssignment_4()); }
(rule__MainFunction__BlocksAssignment_4)
{ after(grammarAccess.getMainFunctionAccess().getBlocksAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FormalParams__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParams__Group__0__Impl
	rule__FormalParams__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParams__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParamsAccess().getParamsAssignment_0()); }
(rule__FormalParams__ParamsAssignment_0)
{ after(grammarAccess.getFormalParamsAccess().getParamsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParams__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParams__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParams__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParamsAccess().getGroup_1()); }
(rule__FormalParams__Group_1__0)*
{ after(grammarAccess.getFormalParamsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FormalParams__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParams__Group_1__0__Impl
	rule__FormalParams__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParams__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParamsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getFormalParamsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParams__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParams__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParams__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParamsAccess().getParamsAssignment_1_1()); }
(rule__FormalParams__ParamsAssignment_1_1)
{ after(grammarAccess.getFormalParamsAccess().getParamsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Param__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__0__Impl
	rule__Param__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getTypeParserRuleCall_0()); }
	ruletype
{ after(grammarAccess.getParamAccess().getTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getNameAssignment_1()); }
(rule__Param__NameAssignment_1)
{ after(grammarAccess.getParamAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
(

)
{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBeginKeyword_1()); }

	'begin' 

{ after(grammarAccess.getBlockAccess().getBeginKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsAssignment_2()); }
(rule__Block__StatementsAssignment_2)*
{ after(grammarAccess.getBlockAccess().getStatementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getEndKeyword_3()); }

	'end' 

{ after(grammarAccess.getBlockAccess().getEndKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_0__0__Impl
	rule__Statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_0_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_0__1__Impl
	rule__Statement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getPostFixExpressionAssignment_0_1()); }
(rule__Statement__PostFixExpressionAssignment_0_1)
{ after(grammarAccess.getStatementAccess().getPostFixExpressionAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getEndExprParserRuleCall_0_2()); }
	ruleendExpr
{ after(grammarAccess.getStatementAccess().getEndExprParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__0__Impl
	rule__Statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getDeclarationParserRuleCall_1_0()); }
	ruledeclaration
{ after(grammarAccess.getStatementAccess().getDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getEndExprParserRuleCall_1_1()); }
	ruleendExpr
{ after(grammarAccess.getStatementAccess().getEndExprParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2__0__Impl
	rule__Statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_2_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2__1__Impl
	rule__Statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAssignmentsAssignment_2_1()); }
(rule__Statement__AssignmentsAssignment_2_1)
{ after(grammarAccess.getStatementAccess().getAssignmentsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getEndExprParserRuleCall_2_2()); }
	ruleendExpr
{ after(grammarAccess.getStatementAccess().getEndExprParserRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_3__0__Impl
	rule__Statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_3_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_3__1__Impl
	rule__Statement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getReturnKeyword_3_1()); }

	'return' 

{ after(grammarAccess.getStatementAccess().getReturnKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_3__2__Impl
	rule__Statement__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExprsAssignment_3_2()); }
(rule__Statement__ExprsAssignment_3_2)?
{ after(grammarAccess.getStatementAccess().getExprsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getEndExprParserRuleCall_3_3()); }
	ruleendExpr
{ after(grammarAccess.getStatementAccess().getEndExprParserRuleCall_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4__0__Impl
	rule__Statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIfKeyword_4_0()); }

	'if' 

{ after(grammarAccess.getStatementAccess().getIfKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4__1__Impl
	rule__Statement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExprParserRuleCall_4_1()); }
	ruleexpr
{ after(grammarAccess.getStatementAccess().getExprParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4__2__Impl
	rule__Statement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getColonKeyword_4_2()); }

	':' 

{ after(grammarAccess.getStatementAccess().getColonKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4__3__Impl
	rule__Statement__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementsAssignment_4_3()); }
(rule__Statement__StatementsAssignment_4_3)
{ after(grammarAccess.getStatementAccess().getStatementsAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_4_4()); }
(rule__Statement__Group_4_4__0)?
{ after(grammarAccess.getStatementAccess().getGroup_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Statement__Group_4_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4_4__0__Impl
	rule__Statement__Group_4_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getElseKeyword_4_4_0()); }

	'else' 

{ after(grammarAccess.getStatementAccess().getElseKeyword_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_4_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementsAssignment_4_4_1()); }
(rule__Statement__StatementsAssignment_4_4_1)
{ after(grammarAccess.getStatementAccess().getStatementsAssignment_4_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_5__0__Impl
	rule__Statement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getForKeyword_5_0()); }

	'for' 

{ after(grammarAccess.getStatementAccess().getForKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_5__1__Impl
	rule__Statement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getParamParserRuleCall_5_1()); }
	ruleparam
{ after(grammarAccess.getStatementAccess().getParamParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_5__2__Impl
	rule__Statement__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getInKeyword_5_2()); }

	'in' 

{ after(grammarAccess.getStatementAccess().getInKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_5__3__Impl
	rule__Statement__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExprsAssignment_5_3()); }
(rule__Statement__ExprsAssignment_5_3)
{ after(grammarAccess.getStatementAccess().getExprsAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_5__4__Impl
	rule__Statement__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getColonKeyword_5_4()); }

	':' 

{ after(grammarAccess.getStatementAccess().getColonKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_5__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_5__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementsAssignment_5_5()); }
(rule__Statement__StatementsAssignment_5_5)
{ after(grammarAccess.getStatementAccess().getStatementsAssignment_5_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Statement__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_6__0__Impl
	rule__Statement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getWhileKeyword_6_0()); }

	'while' 

{ after(grammarAccess.getStatementAccess().getWhileKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_6__1__Impl
	rule__Statement__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExprParserRuleCall_6_1()); }
	ruleexpr
{ after(grammarAccess.getStatementAccess().getExprParserRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_6__2__Impl
	rule__Statement__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getColonKeyword_6_2()); }

	':' 

{ after(grammarAccess.getStatementAccess().getColonKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementsAssignment_6_3()); }
(rule__Statement__StatementsAssignment_6_3)
{ after(grammarAccess.getStatementAccess().getStatementsAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getDeclarationAccess().getGroup_0()); }
(rule__Declaration__Group_0__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_0()); }
)
(
{ before(grammarAccess.getDeclarationAccess().getGroup_0()); }
(rule__Declaration__Group_0__0)*
{ after(grammarAccess.getDeclarationAccess().getGroup_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getNameAssignment_1()); }
(rule__Declaration__NameAssignment_1)
{ after(grammarAccess.getDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getGroup_2()); }
(rule__Declaration__Group_2__0)?
{ after(grammarAccess.getDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_0__0__Impl
	rule__Declaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getVariableTypeAssignment_0_0()); }
(rule__Declaration__VariableTypeAssignment_0_0)
{ after(grammarAccess.getDeclarationAccess().getVariableTypeAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getLeftSquareBracketRightSquareBracketKeyword_0_1()); }
(
	'[]' 
)?
{ after(grammarAccess.getDeclarationAccess().getLeftSquareBracketRightSquareBracketKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_2__0__Impl
	rule__Declaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getDeclarationAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getExprsAssignment_2_1()); }
(rule__Declaration__ExprsAssignment_2_1)
{ after(grammarAccess.getDeclarationAccess().getExprsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getPostfixExprParserRuleCall_0()); }
	rulepostfixExpr
{ after(grammarAccess.getAssignmentAccess().getPostfixExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExprsAssignment_2()); }
(rule__Assignment__ExprsAssignment_2)
{ after(grammarAccess.getAssignmentAccess().getExprsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group__0__Impl
	rule__Expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getAndExprParserRuleCall_0()); }
	ruleandExpr
{ after(grammarAccess.getExprAccess().getAndExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getGroup_1()); }
(rule__Expr__Group_1__0)*
{ after(grammarAccess.getExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group_1__0__Impl
	rule__Expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getVerticalLineVerticalLineKeyword_1_0()); }

	'||' 

{ after(grammarAccess.getExprAccess().getVerticalLineVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getAndExprsAssignment_1_1()); }
(rule__Expr__AndExprsAssignment_1_1)
{ after(grammarAccess.getExprAccess().getAndExprsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__0__Impl
	rule__AndExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getEqExprParserRuleCall_0()); }
	ruleeqExpr
{ after(grammarAccess.getAndExprAccess().getEqExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1()); }
(rule__AndExpr__Group_1__0)*
{ after(grammarAccess.getAndExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1__0__Impl
	rule__AndExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getAmpersandAmpersandKeyword_1_0()); }

	'&&' 

{ after(grammarAccess.getAndExprAccess().getAmpersandAmpersandKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getEqExprsAssignment_1_1()); }
(rule__AndExpr__EqExprsAssignment_1_1)
{ after(grammarAccess.getAndExprAccess().getEqExprsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqExpr__Group__0__Impl
	rule__EqExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqExprAccess().getRelExprParserRuleCall_0()); }
	rulerelExpr
{ after(grammarAccess.getEqExprAccess().getRelExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqExprAccess().getGroup_1()); }
(rule__EqExpr__Group_1__0)*
{ after(grammarAccess.getEqExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqExpr__Group_1__0__Impl
	rule__EqExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqExprAccess().getAlternatives_1_0()); }
(rule__EqExpr__Alternatives_1_0)
{ after(grammarAccess.getEqExprAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqExprAccess().getRelExprsAssignment_1_1()); }
(rule__EqExpr__RelExprsAssignment_1_1)
{ after(grammarAccess.getEqExprAccess().getRelExprsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelExpr__Group__0__Impl
	rule__RelExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelExprAccess().getAddExprParserRuleCall_0()); }
	ruleaddExpr
{ after(grammarAccess.getRelExprAccess().getAddExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelExprAccess().getGroup_1()); }
(rule__RelExpr__Group_1__0)*
{ after(grammarAccess.getRelExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelExpr__Group_1__0__Impl
	rule__RelExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelExprAccess().getAlternatives_1_0()); }
(rule__RelExpr__Alternatives_1_0)
{ after(grammarAccess.getRelExprAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelExprAccess().getAddExprAssignment_1_1()); }
(rule__RelExpr__AddExprAssignment_1_1)
{ after(grammarAccess.getRelExprAccess().getAddExprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpr__Group__0__Impl
	rule__AddExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExprAccess().getMulExprParserRuleCall_0()); }
	rulemulExpr
{ after(grammarAccess.getAddExprAccess().getMulExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExprAccess().getGroup_1()); }
(rule__AddExpr__Group_1__0)*
{ after(grammarAccess.getAddExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpr__Group_1__0__Impl
	rule__AddExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExprAccess().getSignTerminalRuleCall_1_0()); }
	RULE_SIGN
{ after(grammarAccess.getAddExprAccess().getSignTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExprAccess().getMulExprsAssignment_1_1()); }
(rule__AddExpr__MulExprsAssignment_1_1)
{ after(grammarAccess.getAddExprAccess().getMulExprsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MulExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MulExpr__Group__0__Impl
	rule__MulExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExprAccess().getAtomsAssignment_0()); }
(rule__MulExpr__AtomsAssignment_0)
{ after(grammarAccess.getMulExprAccess().getAtomsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MulExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MulExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExprAccess().getGroup_1()); }
(rule__MulExpr__Group_1__0)*
{ after(grammarAccess.getMulExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MulExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MulExpr__Group_1__0__Impl
	rule__MulExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExprAccess().getAlternatives_1_0()); }
(rule__MulExpr__Alternatives_1_0)
{ after(grammarAccess.getMulExprAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MulExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MulExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExprAccess().getAtomsAssignment_1_1()); }
(rule__MulExpr__AtomsAssignment_1_1)
{ after(grammarAccess.getMulExprAccess().getAtomsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atom__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_0__0__Impl
	rule__Atom__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getExclamationMarkKeyword_0_0()); }

	'!' 

{ after(grammarAccess.getAtomAccess().getExclamationMarkKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getAtomParserRuleCall_0_1()); }
	ruleatom
{ after(grammarAccess.getAtomAccess().getAtomParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atom__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_1__0__Impl
	rule__Atom__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getAtomAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_1__1__Impl
	rule__Atom__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getSignTerminalRuleCall_1_1()); }
	RULE_SIGN
{ after(grammarAccess.getAtomAccess().getSignTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_1__2__Impl
	rule__Atom__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getExprParserRuleCall_1_2()); }
	ruleexpr
{ after(grammarAccess.getAtomAccess().getExprParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getAtomAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Atom__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_2__0__Impl
	rule__Atom__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getAtomAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_2__1__Impl
	rule__Atom__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getExprParserRuleCall_2_1()); }
	ruleexpr
{ after(grammarAccess.getAtomAccess().getExprParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getAtomAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Atom__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_4__0__Impl
	rule__Atom__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getAtomAction_4_0()); }
(

)
{ after(grammarAccess.getAtomAccess().getAtomAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getConstantsAssignment_4_1()); }
(rule__Atom__ConstantsAssignment_4_1)
{ after(grammarAccess.getAtomAccess().getConstantsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostfixExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpr__Group__0__Impl
	rule__PostfixExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getAlternatives_0()); }
(rule__PostfixExpr__Alternatives_0)
{ after(grammarAccess.getPostfixExprAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getAlternatives_1()); }
(rule__PostfixExpr__Alternatives_1)*
{ after(grammarAccess.getPostfixExprAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostfixExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpr__Group_1_0__0__Impl
	rule__PostfixExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getFullStopKeyword_1_0_0()); }

	'.' 

{ after(grammarAccess.getPostfixExprAccess().getFullStopKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpr__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getIDTerminalRuleCall_1_0_1()); }
	RULE_ID
{ after(grammarAccess.getPostfixExprAccess().getIDTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostfixExpr__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpr__Group_1_1__0__Impl
	rule__PostfixExpr__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getLeftParenthesisKeyword_1_1_0()); }

	'(' 

{ after(grammarAccess.getPostfixExprAccess().getLeftParenthesisKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpr__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpr__Group_1_1__1__Impl
	rule__PostfixExpr__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getGroup_1_1_1()); }
(rule__PostfixExpr__Group_1_1_1__0)?
{ after(grammarAccess.getPostfixExprAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpr__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpr__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getRightParenthesisKeyword_1_1_2()); }

	')' 

{ after(grammarAccess.getPostfixExprAccess().getRightParenthesisKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PostfixExpr__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpr__Group_1_1_1__0__Impl
	rule__PostfixExpr__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getExpressionsAssignment_1_1_1_0()); }
(rule__PostfixExpr__ExpressionsAssignment_1_1_1_0)
{ after(grammarAccess.getPostfixExprAccess().getExpressionsAssignment_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpr__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpr__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getGroup_1_1_1_1()); }
(rule__PostfixExpr__Group_1_1_1_1__0)*
{ after(grammarAccess.getPostfixExprAccess().getGroup_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostfixExpr__Group_1_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpr__Group_1_1_1_1__0__Impl
	rule__PostfixExpr__Group_1_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__Group_1_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getCommaKeyword_1_1_1_1_0()); }

	',' 

{ after(grammarAccess.getPostfixExprAccess().getCommaKeyword_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpr__Group_1_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpr__Group_1_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__Group_1_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getExpressionsAssignment_1_1_1_1_1()); }
(rule__PostfixExpr__ExpressionsAssignment_1_1_1_1_1)
{ after(grammarAccess.getPostfixExprAccess().getExpressionsAssignment_1_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostfixExpr__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpr__Group_1_2__0__Impl
	rule__PostfixExpr__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getLeftSquareBracketKeyword_1_2_0()); }

	'[' 

{ after(grammarAccess.getPostfixExprAccess().getLeftSquareBracketKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpr__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpr__Group_1_2__1__Impl
	rule__PostfixExpr__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getExpressionsAssignment_1_2_1()); }
(rule__PostfixExpr__ExpressionsAssignment_1_2_1)
{ after(grammarAccess.getPostfixExprAccess().getExpressionsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpr__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpr__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getRightSquareBracketKeyword_1_2_2()); }

	']' 

{ after(grammarAccess.getPostfixExprAccess().getRightSquareBracketKeyword_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Constant__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group_0__0__Impl
	rule__Constant__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getConstantAction_0_0()); }
(

)
{ after(grammarAccess.getConstantAccess().getConstantAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getTrueKeyword_0_1()); }

	'true' 

{ after(grammarAccess.getConstantAccess().getTrueKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constant__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group_1__0__Impl
	rule__Constant__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getConstantAction_1_0()); }
(

)
{ after(grammarAccess.getConstantAccess().getConstantAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getFalseKeyword_1_1()); }

	'false' 

{ after(grammarAccess.getConstantAccess().getFalseKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FLOAT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLOAT__Group__0__Impl
	rule__FLOAT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOATAccess().getFLOATAssignment_0()); }
(rule__FLOAT__FLOATAssignment_0)
{ after(grammarAccess.getFLOATAccess().getFLOATAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLOAT__Group__1__Impl
	rule__FLOAT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOATAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getFLOATAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLOAT__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFLOATAccess().getFLOATAssignment_2()); }
(rule__FLOAT__FLOATAssignment_2)
{ after(grammarAccess.getFLOATAccess().getFLOATAssignment_2()); }
)
(
{ before(grammarAccess.getFLOATAccess().getFLOATAssignment_2()); }
(rule__FLOAT__FLOATAssignment_2)*
{ after(grammarAccess.getFLOATAccess().getFLOATAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__FunctionsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getFunctionsFunctionDefinitionParserRuleCall_0_0()); }
	rulefunctionDefinition{ after(grammarAccess.getModelAccess().getFunctionsFunctionDefinitionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__MainAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMainMainFunctionParserRuleCall_1_0()); }
	rulemainFunction{ after(grammarAccess.getModelAccess().getMainMainFunctionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__FormalParamsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getFormalParamsFormalParamsParserRuleCall_2_0()); }
	ruleformalParams{ after(grammarAccess.getFunctionDefinitionAccess().getFormalParamsFormalParamsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__ReturnTypeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getReturnTypeTypeParserRuleCall_4_1_0()); }
	ruletype{ after(grammarAccess.getFunctionDefinitionAccess().getReturnTypeTypeParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__BlocksAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getBlocksBlockParserRuleCall_5_0()); }
	ruleblock{ after(grammarAccess.getFunctionDefinitionAccess().getBlocksBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__MainAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getMainMainKeyword_0_0()); }
(
{ before(grammarAccess.getMainFunctionAccess().getMainMainKeyword_0_0()); }

	'main' 

{ after(grammarAccess.getMainFunctionAccess().getMainMainKeyword_0_0()); }
)

{ after(grammarAccess.getMainFunctionAccess().getMainMainKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__FormalParamsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getFormalParamsFormalParamsParserRuleCall_2_0()); }
	ruleformalParams{ after(grammarAccess.getMainFunctionAccess().getFormalParamsFormalParamsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainFunction__BlocksAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainFunctionAccess().getBlocksBlockParserRuleCall_4_0()); }
	ruleblock{ after(grammarAccess.getMainFunctionAccess().getBlocksBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParams__ParamsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParamsAccess().getParamsParamParserRuleCall_0_0()); }
	ruleparam{ after(grammarAccess.getFormalParamsAccess().getParamsParamParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParams__ParamsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParamsAccess().getParamsParamParserRuleCall_1_1_0()); }
	ruleparam{ after(grammarAccess.getFormalParamsAccess().getParamsParamParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getParamAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_2_0()); }
	rulestatement{ after(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypesAlternatives_0()); }
(rule__Type__TypesAlternatives_0)
{ after(grammarAccess.getTypeAccess().getTypesAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__PostFixExpressionAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getPostFixExpressionPostfixExprParserRuleCall_0_1_0()); }
	rulepostfixExpr{ after(grammarAccess.getStatementAccess().getPostFixExpressionPostfixExprParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__AssignmentsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAssignmentsAssignmentParserRuleCall_2_1_0()); }
	ruleassignment{ after(grammarAccess.getStatementAccess().getAssignmentsAssignmentParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ExprsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExprsExprParserRuleCall_3_2_0()); }
	ruleexpr{ after(grammarAccess.getStatementAccess().getExprsExprParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementsAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementsStatementParserRuleCall_4_3_0()); }
	rulestatement{ after(grammarAccess.getStatementAccess().getStatementsStatementParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementsAssignment_4_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementsStatementParserRuleCall_4_4_1_0()); }
	rulestatement{ after(grammarAccess.getStatementAccess().getStatementsStatementParserRuleCall_4_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ExprsAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExprsExprParserRuleCall_5_3_0()); }
	ruleexpr{ after(grammarAccess.getStatementAccess().getExprsExprParserRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementsAssignment_5_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementsStatementParserRuleCall_5_5_0()); }
	rulestatement{ after(grammarAccess.getStatementAccess().getStatementsStatementParserRuleCall_5_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementsAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementsStatementParserRuleCall_6_3_0()); }
	rulestatement{ after(grammarAccess.getStatementAccess().getStatementsStatementParserRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__VariableTypeAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getVariableTypeTypeParserRuleCall_0_0_0()); }
	ruletype{ after(grammarAccess.getDeclarationAccess().getVariableTypeTypeParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ExprsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getExprsExprParserRuleCall_2_1_0()); }
	ruleexpr{ after(grammarAccess.getDeclarationAccess().getExprsExprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExprsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExprsExprParserRuleCall_2_0()); }
	ruleexpr{ after(grammarAccess.getAssignmentAccess().getExprsExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__AndExprsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getAndExprsAndExprParserRuleCall_1_1_0()); }
	ruleandExpr{ after(grammarAccess.getExprAccess().getAndExprsAndExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__EqExprsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getEqExprsEqExprParserRuleCall_1_1_0()); }
	ruleeqExpr{ after(grammarAccess.getAndExprAccess().getEqExprsEqExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqExpr__RelExprsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqExprAccess().getRelExprsRelExprParserRuleCall_1_1_0()); }
	rulerelExpr{ after(grammarAccess.getEqExprAccess().getRelExprsRelExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__AddExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelExprAccess().getAddExprAddExprParserRuleCall_1_1_0()); }
	ruleaddExpr{ after(grammarAccess.getRelExprAccess().getAddExprAddExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__MulExprsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExprAccess().getMulExprsMulExprParserRuleCall_1_1_0()); }
	rulemulExpr{ after(grammarAccess.getAddExprAccess().getMulExprsMulExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__AtomsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExprAccess().getAtomsAtomParserRuleCall_0_0()); }
	ruleatom{ after(grammarAccess.getMulExprAccess().getAtomsAtomParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__AtomsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExprAccess().getAtomsAtomParserRuleCall_1_1_0()); }
	ruleatom{ after(grammarAccess.getMulExprAccess().getAtomsAtomParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__ConstantsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getConstantsConstantParserRuleCall_4_1_0()); }
	ruleconstant{ after(grammarAccess.getAtomAccess().getConstantsConstantParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__ExistingVariableAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getExistingVariableDeclarationCrossReference_0_0_0()); }
(
{ before(grammarAccess.getPostfixExprAccess().getExistingVariableDeclarationIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getPostfixExprAccess().getExistingVariableDeclarationIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getPostfixExprAccess().getExistingVariableDeclarationCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__ExistingVariableAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getExistingVariableParamCrossReference_0_1_0()); }
(
{ before(grammarAccess.getPostfixExprAccess().getExistingVariableParamIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getPostfixExprAccess().getExistingVariableParamIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getPostfixExprAccess().getExistingVariableParamCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__ExistingVariableAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getExistingVariableFunctionDefinitionCrossReference_0_2_0()); }
(
{ before(grammarAccess.getPostfixExprAccess().getExistingVariableFunctionDefinitionIDTerminalRuleCall_0_2_0_1()); }
	RULE_ID{ after(grammarAccess.getPostfixExprAccess().getExistingVariableFunctionDefinitionIDTerminalRuleCall_0_2_0_1()); }
)
{ after(grammarAccess.getPostfixExprAccess().getExistingVariableFunctionDefinitionCrossReference_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__ExpressionsAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getExpressionsExprParserRuleCall_1_1_1_0_0()); }
	ruleexpr{ after(grammarAccess.getPostfixExprAccess().getExpressionsExprParserRuleCall_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__ExpressionsAssignment_1_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getExpressionsExprParserRuleCall_1_1_1_1_1_0()); }
	ruleexpr{ after(grammarAccess.getPostfixExprAccess().getExpressionsExprParserRuleCall_1_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpr__ExpressionsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExprAccess().getExpressionsExprParserRuleCall_1_2_1_0()); }
	ruleexpr{ after(grammarAccess.getPostfixExprAccess().getExpressionsExprParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__FloatAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getFloatFLOATParserRuleCall_2_0()); }
	ruleFLOAT{ after(grammarAccess.getConstantAccess().getFloatFLOATParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__IntegerAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getIntegerINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getConstantAccess().getIntegerINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__StringAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getStringSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getConstantAccess().getStringSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NullAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNullNullKeyword_5_0()); }
(
{ before(grammarAccess.getConstantAccess().getNullNullKeyword_5_0()); }

	'null' 

{ after(grammarAccess.getConstantAccess().getNullNullKeyword_5_0()); }
)

{ after(grammarAccess.getConstantAccess().getNullNullKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__InfinityAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getInfinityInftyKeyword_6_0()); }
(
{ before(grammarAccess.getConstantAccess().getInfinityInftyKeyword_6_0()); }

	'infty' 

{ after(grammarAccess.getConstantAccess().getInfinityInftyKeyword_6_0()); }
)

{ after(grammarAccess.getConstantAccess().getInfinityInftyKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__FLOATAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOATAccess().getFLOATINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getFLOATAccess().getFLOATINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__FLOATAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOATAccess().getFLOATINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getFLOATAccess().getFLOATINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_SIGN : ('+'|'-');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


